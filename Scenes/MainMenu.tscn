[gd_scene load_steps=15 format=2]

[ext_resource path="res://Assets/VCR_OSD_MONO_1.001.ttf" type="DynamicFontData" id=1]
[ext_resource path="res://Assets/TheButton.png" type="Texture" id=2]
[ext_resource path="res://Scripts/UIScreen.gd" type="Script" id=3]
[ext_resource path="res://Assets/SoundEffects/Space Sprinkles.mp3" type="AudioStream" id=4]

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 95, 35 )

[sub_resource type="DynamicFont" id=2]
size = 22
font_data = ExtResource( 1 )

[sub_resource type="Gradient" id=3]
offsets = PoolRealArray( 0, 0.556098, 1 )
colors = PoolColorArray( 1, 1, 1, 0.631373, 1, 1, 1, 0.560784, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=4]
gradient = SubResource( 3 )

[sub_resource type="Curve" id=5]
_data = [ Vector2( 0, 0.454545 ), 0.0, 0.0, 0, 0, Vector2( 0.0964912, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.723684, 1 ), 0.0, 0.0, 0, 0, Vector2( 1, 0.454545 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=6]
curve = SubResource( 5 )

[sub_resource type="ParticlesMaterial" id=7]
lifetime_randomness = 0.2
emission_shape = 2
emission_box_extents = Vector3( 900, 600, 1 )
flag_disable_z = true
spread = 180.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 30.0
initial_velocity_random = 0.3
orbit_velocity = 0.0
orbit_velocity_random = 0.0
scale = 4.0
scale_curve = SubResource( 6 )
color_ramp = SubResource( 4 )

[sub_resource type="Environment" id=8]
background_mode = 4
tonemap_mode = 3
glow_enabled = true
glow_strength = 0.8
glow_blend_mode = 0
glow_hdr_threshold = 0.1
glow_bicubic_upscale = true

[sub_resource type="Shader" id=9]
code = "shader_type canvas_item;

// rendering params
uniform float sphsize=.7; // planet size
uniform float dist=.27; // distance for glow and distortion
uniform float perturb=.3; // distortion amount of the flow around the planet
uniform float displacement=.015; // hot air effect
uniform float windspeed=.4; // speed of wind flow
uniform float steps=110.; // number of steps for the volumetric rendering
uniform float stepsize=.025; 
uniform float brightness=.43;
uniform vec3 planetcolor=vec3(0.55,0.4,0.3);
uniform float fade=.005; //fade by distance
uniform float glow=3.5; // glow amount, mainly on hit side


// fractal params
uniform int iterations=13; 
uniform float fractparam=.7;
uniform vec3 offset=vec3(1.5,2.,-1.5);


float wind(vec3 p) {
	float d=max(0.,dist-max(0.,length(p)-sphsize)/sphsize)/dist; // for distortion and glow area
	float x=max(0.2,p.x*2.); // to increase glow on left side
	p.y*=1.+max(0.,-p.x-sphsize*.25)*1.5; // left side distortion (cheesy)
	p-=d*normalize(p)*perturb; // spheric distortion of flow
	p+=vec3(TIME*windspeed,0.,0.); // flow movement
	p=abs(fract((p+offset)*.1)-.5); // tile folding 
	for (int i=0; i<iterations; i++) {  
		p=abs(p)/dot(p,p)-fractparam; // the magic formula for the hot flow
	}
	return length(p)*(1.+d*glow*x)+d*glow*x; // return the result with glow applied
}

void fragment ()
{
	// get ray dir
	vec2 uv = UV - vec2(.5);
	vec3 dir=vec3(uv,1.);
	dir.x*=SCREEN_PIXEL_SIZE.x/SCREEN_PIXEL_SIZE.y;
	vec3 from=vec3(0.,0.,-2.+texture(TEXTURE,uv*.5+TIME).x*stepsize); //from+dither

	// volumetric rendering
	float v=0., l=-0.0001, t=TIME*windspeed*.2;
	for (float r=10.;r<steps;r++) {
		vec3 p=from+r*dir*stepsize;
		float tx=texture(TEXTURE,uv*.2+vec2(t,0.)).x*displacement; // hot air effect
		if (length(p)-sphsize-tx>0.)
		// outside planet, accumulate values as ray goes, applying distance fading
			v+=min(50.,wind(p))*max(0.,1.-r*fade); 
		else if (l<0.) 
		//inside planet, get planet shading if not already 
		//loop continues because of previous problems with breaks and not always optimizes much
			l=pow(max(.53,dot(normalize(p),normalize(vec3(-1.,.5,-0.3)))),4.)
			*(.5+texture(TEXTURE,uv*vec2(2.,1.)*(1.+p.z*.5)+vec2(tx+t*.5,0.)).x*2.);
		}
	v/=steps; v*=brightness; // average values and apply bright factor
	vec3 col=vec3(v*1.25,v*v,v*v*v)+l*planetcolor; // set color
	col*=1.-length(pow(abs(uv),vec2(5.)))*14.; // vignette (kind of)
	COLOR = vec4(col,1.0);
}"

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 9 )
shader_param/sphsize = 0.7
shader_param/dist = 0.27
shader_param/perturb = 0.3
shader_param/displacement = 0.015
shader_param/windspeed = 0.4
shader_param/steps = 110.0
shader_param/stepsize = 0.025
shader_param/brightness = 0.43
shader_param/planetcolor = Vector3( 0.55, 0.4, 0.3 )
shader_param/fade = 0.005
shader_param/glow = 3.5
shader_param/iterations = 13
shader_param/fractparam = 0.7
shader_param/offset = Vector3( 1.5, 2, -1.5 )

[node name="UIScreen" type="Node2D"]
script = ExtResource( 3 )

[node name="StartButton" type="NinePatchRect" parent="."]
margin_left = 406.0
margin_top = 79.0
margin_right = 597.0
margin_bottom = 162.0
mouse_filter = 1
texture = ExtResource( 2 )
patch_margin_left = 11
patch_margin_top = 18
patch_margin_right = 13
patch_margin_bottom = 29
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TouchScreenButton" type="TouchScreenButton" parent="StartButton"]
shape = SubResource( 1 )

[node name="Label" type="Label" parent="StartButton"]
margin_left = 28.0
margin_top = 24.0
margin_right = 171.0
margin_bottom = 48.0
custom_fonts/font = SubResource( 2 )
text = "Start Game"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="QuitButton" type="NinePatchRect" parent="."]
margin_left = 401.0
margin_top = 403.0
margin_right = 592.0
margin_bottom = 486.0
mouse_filter = 1
texture = ExtResource( 2 )
patch_margin_left = 11
patch_margin_top = 18
patch_margin_right = 13
patch_margin_bottom = 29
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TouchScreenButton" type="TouchScreenButton" parent="QuitButton"]
shape = SubResource( 1 )

[node name="Label" type="Label" parent="QuitButton"]
margin_left = 28.0
margin_top = 24.0
margin_right = 171.0
margin_bottom = 48.0
rect_scale = Vector2( 1.1, 1 )
custom_fonts/font = SubResource( 2 )
text = "Quit Game"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]

[node name="Parallax" type="ParallaxLayer" parent="ParallaxBackground"]
motion_scale = Vector2( 0.8, 0.8 )
motion_mirroring = Vector2( 1800, 1200 )

[node name="ColorRect" type="ColorRect" parent="ParallaxBackground/Parallax"]
margin_left = 283.0
margin_top = 191.0
margin_right = 404.0
margin_bottom = 307.0
color = Color( 0.745098, 0.235294, 0.0784314, 0.243137 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect2" type="ColorRect" parent="ParallaxBackground/Parallax"]
margin_left = 534.0
margin_top = 763.0
margin_right = 655.0
margin_bottom = 989.0
color = Color( 0.0784314, 0.168627, 0.745098, 0.243137 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect3" type="ColorRect" parent="ParallaxBackground/Parallax"]
margin_left = 920.0
margin_top = 456.0
margin_right = 1158.0
margin_bottom = 572.0
color = Color( 0.745098, 0.141176, 0.0784314, 0.243137 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect4" type="ColorRect" parent="ParallaxBackground/Parallax"]
margin_left = 1418.0
margin_top = 737.0
margin_right = 1609.0
margin_bottom = 871.0
color = Color( 0.0784314, 0.168627, 0.745098, 0.243137 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect5" type="ColorRect" parent="ParallaxBackground/Parallax"]
margin_left = 1461.0
margin_top = 77.0
margin_right = 1582.0
margin_bottom = 193.0
color = Color( 0.0784314, 0.168627, 0.745098, 0.243137 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Particles2D" type="Particles2D" parent="ParallaxBackground/Parallax"]
position = Vector2( 800, 0 )
amount = 20
lifetime = 10.0
visibility_rect = Rect2( -987.55, -754.852, 1783.93, 1439.1 )
process_material = SubResource( 7 )

[node name="Parallax2" type="ParallaxLayer" parent="ParallaxBackground"]
modulate = Color( 1, 1, 1, 0.603922 )
motion_scale = Vector2( 0.6, 0.6 )
motion_mirroring = Vector2( 1800, 1200 )

[node name="ColorRect" type="ColorRect" parent="ParallaxBackground/Parallax2"]
margin_left = 153.0
margin_top = 652.0
margin_right = 274.0
margin_bottom = 768.0
color = Color( 0.745098, 0.141176, 0.0784314, 0.243137 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect2" type="ColorRect" parent="ParallaxBackground/Parallax2"]
margin_left = 440.0
margin_top = 222.0
margin_right = 561.0
margin_bottom = 448.0
color = Color( 0.0784314, 0.168627, 0.745098, 0.243137 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect3" type="ColorRect" parent="ParallaxBackground/Parallax2"]
margin_left = 857.0
margin_top = 856.0
margin_right = 1095.0
margin_bottom = 972.0
color = Color( 0.0784314, 0.168627, 0.745098, 0.243137 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect4" type="ColorRect" parent="ParallaxBackground/Parallax2"]
margin_left = 1021.0
margin_top = 109.0
margin_right = 1212.0
margin_bottom = 243.0
color = Color( 0.745098, 0.156863, 0.0784314, 0.243137 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect5" type="ColorRect" parent="ParallaxBackground/Parallax2"]
margin_left = 1189.0
margin_top = 456.0
margin_right = 1310.0
margin_bottom = 572.0
color = Color( 0.0784314, 0.168627, 0.745098, 0.243137 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Particles2D2" type="Particles2D" parent="ParallaxBackground/Parallax2"]
position = Vector2( 800, 0 )
amount = 20
lifetime = 10.0
visibility_rect = Rect2( -859.365, -680.398, 1845.35, 1382.94 )
process_material = SubResource( 7 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 8 )

[node name="Polygon2D" type="Polygon2D" parent="."]
z_index = -1
color = Color( 0.164706, 0.164706, 0.164706, 1 )
polygon = PoolVector2Array( 31, 31, 980, 31, 980, 537, 31, 537, 31, 31, -1206, -37, -1245, 1948, 2684, 1911, 2730, -864, -1208, -822, -1206, -38 )

[node name="Line2D" type="Line2D" parent="."]
points = PoolVector2Array( 28, 28, 982, 28, 983, 539, 28, 539, 28, 25 )
width = 6.0
default_color = Color( 1, 1, 1, 1 )

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 4 )
volume_db = -10.0
autoplay = true

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 10 )

[connection signal="mouse_entered" from="StartButton" to="." method="_on_TheButton_mouse_entered" binds= [ "Start" ]]
[connection signal="mouse_exited" from="StartButton" to="." method="_on_TheButton_mouse_exited" binds= [ "Start" ]]
[connection signal="pressed" from="StartButton/TouchScreenButton" to="." method="_on_TouchScreenButton_pressed"]
[connection signal="mouse_entered" from="QuitButton" to="." method="_on_TheButton_mouse_entered" binds= [ "Quit" ]]
[connection signal="mouse_exited" from="QuitButton" to="." method="_on_TheButton_mouse_exited" binds= [ "Quit" ]]
[connection signal="pressed" from="QuitButton/TouchScreenButton" to="." method="_on_TouchScreenButton_pressed"]
